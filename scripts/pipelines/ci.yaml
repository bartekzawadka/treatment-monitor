name: 'Build'

jobs:
    - job: Build
      displayName: 'Build'
      variables:
        BuildConfiguration: Release
        appVersion: '1.0.0'
        isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
      workspace: 
        clean: all
      pool:
        name: Azure Pipelines
        vmImage: ubuntu-20.04
      steps:
      - script: |
          PACKAGE_PATH="$(Build.SourcesDirectory)/src/app/treatment-monitor/package.json"
          PACKAGE_VERSION=$(grep version $PACKAGE_PATH | sed 's/.*"version": "\(.*\)".*/\1/')
          echo "Setting app version: $PACKAGE_VERSION"
          echo "##vso[task.setvariable variable=appVersion]$PACKAGE_VERSION"
        displayName: Get app version
      - task: qetza.replacetokens.replacetokens-task.replacetokens@3
        displayName: 'Replace tokens in **/environment.prod.ts'
        inputs:
            rootDirectory: src
            targetFiles: '**/environment.prod.ts'
            writeBOM: false
            tokenPrefix: '##{'
            tokenSuffix: '}##'        
      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '5.0.x'           

      - script: './build.sh --target compile --configuration $(BuildConfiguration) --host AzurePipelines'
        displayName: 'Run NUKE build'

      - task: Docker@2
        displayName: Build API image
        inputs:
          repository: $(apiImageName)
          command: build
          buildContext: $(Build.SourcesDirectory)/src/backend/Treatment.Monitor/Treatment.Monitor.Api/bin/$(BuildConfiguration)/net5.0
          Dockerfile: $(Build.SourcesDirectory)/src/backend/Treatment.Monitor/Treatment.Monitor.Api/Dockerfile
          tags: |
            $(appVersion)
            latest
        condition: and(succeeded(), eq(variables.isMain, true))

      - task: Docker@2
        displayName: Build APP image
        inputs:
          repository: $(appImageName)
          command: build
          buildContext: $(Build.SourcesDirectory)/src/app/treatment-monitor
          Dockerfile: $(Build.SourcesDirectory)/src/app/treatment-monitor/Dockerfile
          tags: |
            $(appVersion)
            latest
        condition: and(succeeded(), eq(variables.isMain, true))  

      - task: Docker@2
        displayName: Build Notifier image
        inputs:
          repository: $(notifierImageName)
          command: build
          buildContext: $(Build.SourcesDirectory)/src/api/Treatment.Monitor/Treatment.Monitor.Notifier/bin/$(BuildConfiguration)/net5.0
          Dockerfile: $(Build.SourcesDirectory)/src/api/Treatment.Monitor/Treatment.Monitor.Notifier/Dockerfile
          tags: |
            $(appVersion)
            latest
        condition: and(succeeded(), eq(variables.isMain, true))

      - task: Docker@2
        displayName: Publish API image
        inputs:
          containerRegistry: 'dockerhub'
          repository: $(apiImageName)
          command: push
          tags: |
            $(appVersion)
            latest
        condition: and(succeeded(), eq(variables.isMain, true))  

      - task: Docker@2
        displayName: Publish APP image
        inputs:
          containerRegistry: 'dockerhub'
          repository: $(appImageName)
          command: push
          tags: |
            $(appVersion)
            latest
        condition: and(succeeded(), eq(variables.isMain, true))  
            
      - task: Docker@2
        displayName: Publish Notifier image
        inputs:
          containerRegistry: 'dockerhub'
          repository: $(notifierImageName)
          command: push
          tags: |
            $(appVersion)
            latest
        condition: and(succeeded(), eq(variables.isMain, true))          